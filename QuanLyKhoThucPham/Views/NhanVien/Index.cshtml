@model PaginatedList<QuanLyKhoThucPham.Models.NhanVienModel>

@{
    ViewData["Title"] = "Index";
    var nhanVienTheoChucVu = Model.GroupBy(nv => nv.ChucVu)
                                 .Select(g => new { ChucVu = g.Key, SoLuong = g.Count() })
                                 .ToList();

}
<h1>Danh Sách Nhân Viên</h1>
<form asp-action="Index" method="get" class="mb-3">
    <div class="input-group">
        <input type="text" name="searchString" class="form-control" placeholder="Nhập tên nhân viên..."
               value="@Context.Request.Query["searchString"]" />
        <button type="submit" class="btn btn-primary">Tìm kiếm</button>
    </div>
</form>

<p>
    <a asp-action="Create" class="btn btn-primary">Tạo mới</a>
</p>

<h2>Thống kê nhân viên theo chức vụ</h2>
<table class="table table-bordered">
    <thead class="table-dark">
        <tr>
            <th>Chức Vụ</th>
            <th>Số Lượng</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in nhanVienTheoChucVu)
        {
            <tr>
                <td>@item.ChucVu</td>
                <td>@item.SoLuong</td>
            </tr>
        }
    </tbody>
</table>

<table class="table table-striped">
    <thead class="table-dark">
        <tr>
            <th>
                Họ tên
            </th>
            <th>
                Giới tính
            </th>
            <th>
                Chức vụ
            </th>
            <th>Hoạt động</th>
        </tr>
    </thead>
    <tbody>
        @if (!Model.Any())
        {
            <tr>
                <td colspan="4" class="text-center text-danger">Không tìm thấy nhân viên nào.</td>
            </tr>
        }
        else
        {
            @foreach (var item in Model)
            {
                <tr>
                    <td>@Html.DisplayFor(modelItem => item.HoTen)</td>
                    <td>@Html.DisplayFor(modelItem => item.GioiTinh)</td>
                    <td>@Html.DisplayFor(modelItem => item.ChucVu)</td>
                    <td>
                        <a asp-action="Edit" asp-route-maNV="@item.MaNhanVien" class="btn btn-warning btn-sm">Chỉnh sửa</a>
                        <a asp-action="Details" asp-route-maNV="@item.MaNhanVien" class="btn btn-secondary btn-sm">Chi tiết</a>
                        <a asp-action="Delete" asp-route-maNV="@item.MaNhanVien" class="btn btn-danger btn-sm">Xóa</a>
                    </td>
                </tr>
            }
        }

    </tbody>
</table>


@{
    var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.HasNextPage ? "disabled" : "";
}

<a asp-action="Index"
   asp-route-sortOrder="@ViewData["CurrentSort"]"
   asp-route-pageNumber="@(Model.PageIndex - 1)"
   asp-route-searchString="@ViewData["searchString"]"
   class="btn btn-default @prevDisabled">
    Trước
</a>
<!-- Hiển thị danh sách số trang -->
@for (int i = 1; i <= Model.TotalPages; i++)
{
    if (i == Model.PageIndex)
    {
        <span><strong>@i</strong></span> <!-- Trang hiện tại sẽ được in đậm -->
    }
    else
    {
        <a asp-action="Index" asp-route-pageNumber="@i">@i</a>
    }
}

<a asp-action="Index"
   asp-route-sortOrder="@ViewData["CurrentSort"]"
   asp-route-pageNumber="@(Model.PageIndex + 1)"
   asp-route-searchString="@ViewData["searchString"]"
   class="btn btn-default @nextDisabled">
    Sau
</a>